// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: archive.proto

package org.qubic.archiver.proto;

/**
 * Protobuf type {@code qubic.archiver.archive.pb.GetStatusResponse}
 */
public final class GetStatusResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:qubic.archiver.archive.pb.GetStatusResponse)
    GetStatusResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GetStatusResponse.newBuilder() to construct.
  private GetStatusResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GetStatusResponse() {
    skippedTicks_ = java.util.Collections.emptyList();
    processedTickIntervalsPerEpoch_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GetStatusResponse();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GetStatusResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            ProcessedTick.Builder subBuilder = null;
            if (lastProcessedTick_ != null) {
              subBuilder = lastProcessedTick_.toBuilder();
            }
            lastProcessedTick_ = input.readMessage(ProcessedTick.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lastProcessedTick_);
              lastProcessedTick_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              lastProcessedTicksPerEpoch_ = com.google.protobuf.MapField.newMapField(
                  LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<Integer, Integer>
            lastProcessedTicksPerEpoch__ = input.readMessage(
                LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            lastProcessedTicksPerEpoch_.getMutableMap().put(
                lastProcessedTicksPerEpoch__.getKey(), lastProcessedTicksPerEpoch__.getValue());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              skippedTicks_ = new java.util.ArrayList<SkippedTicksInterval>();
              mutable_bitField0_ |= 0x00000002;
            }
            skippedTicks_.add(
                input.readMessage(SkippedTicksInterval.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              processedTickIntervalsPerEpoch_ = new java.util.ArrayList<ProcessedTickIntervalsPerEpoch>();
              mutable_bitField0_ |= 0x00000004;
            }
            processedTickIntervalsPerEpoch_.add(
                input.readMessage(ProcessedTickIntervalsPerEpoch.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              emptyTicksPerEpoch_ = com.google.protobuf.MapField.newMapField(
                  EmptyTicksPerEpochDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<Integer, Integer>
            emptyTicksPerEpoch__ = input.readMessage(
                EmptyTicksPerEpochDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            emptyTicksPerEpoch_.getMutableMap().put(
                emptyTicksPerEpoch__.getKey(), emptyTicksPerEpoch__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        skippedTicks_ = java.util.Collections.unmodifiableList(skippedTicks_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        processedTickIntervalsPerEpoch_ = java.util.Collections.unmodifiableList(processedTickIntervalsPerEpoch_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetLastProcessedTicksPerEpoch();
      case 5:
        return internalGetEmptyTicksPerEpoch();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GetStatusResponse.class, Builder.class);
  }

  public static final int LAST_PROCESSED_TICK_FIELD_NUMBER = 1;
  private ProcessedTick lastProcessedTick_;
  /**
   * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
   * @return Whether the lastProcessedTick field is set.
   */
  @Override
  public boolean hasLastProcessedTick() {
    return lastProcessedTick_ != null;
  }
  /**
   * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
   * @return The lastProcessedTick.
   */
  @Override
  public ProcessedTick getLastProcessedTick() {
    return lastProcessedTick_ == null ? ProcessedTick.getDefaultInstance() : lastProcessedTick_;
  }
  /**
   * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
   */
  @Override
  public ProcessedTickOrBuilder getLastProcessedTickOrBuilder() {
    return getLastProcessedTick();
  }

  public static final int LAST_PROCESSED_TICKS_PER_EPOCH_FIELD_NUMBER = 2;
  private static final class LastProcessedTicksPerEpochDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, Integer>newDefaultInstance(
                QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_LastProcessedTicksPerEpochEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0);
  }
  private com.google.protobuf.MapField<
      Integer, Integer> lastProcessedTicksPerEpoch_;
  private com.google.protobuf.MapField<Integer, Integer>
  internalGetLastProcessedTicksPerEpoch() {
    if (lastProcessedTicksPerEpoch_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry);
    }
    return lastProcessedTicksPerEpoch_;
  }

  public int getLastProcessedTicksPerEpochCount() {
    return internalGetLastProcessedTicksPerEpoch().getMap().size();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
   */

  @Override
  public boolean containsLastProcessedTicksPerEpoch(
      int key) {
    
    return internalGetLastProcessedTicksPerEpoch().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLastProcessedTicksPerEpochMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, Integer> getLastProcessedTicksPerEpoch() {
    return getLastProcessedTicksPerEpochMap();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
   */
  @Override

  public java.util.Map<Integer, Integer> getLastProcessedTicksPerEpochMap() {
    return internalGetLastProcessedTicksPerEpoch().getMap();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
   */
  @Override

  public int getLastProcessedTicksPerEpochOrDefault(
      int key,
      int defaultValue) {
    
    java.util.Map<Integer, Integer> map =
        internalGetLastProcessedTicksPerEpoch().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
   */
  @Override

  public int getLastProcessedTicksPerEpochOrThrow(
      int key) {
    
    java.util.Map<Integer, Integer> map =
        internalGetLastProcessedTicksPerEpoch().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SKIPPED_TICKS_FIELD_NUMBER = 3;
  private java.util.List<SkippedTicksInterval> skippedTicks_;
  /**
   * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
   */
  @Override
  public java.util.List<SkippedTicksInterval> getSkippedTicksList() {
    return skippedTicks_;
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
   */
  @Override
  public java.util.List<? extends SkippedTicksIntervalOrBuilder>
      getSkippedTicksOrBuilderList() {
    return skippedTicks_;
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
   */
  @Override
  public int getSkippedTicksCount() {
    return skippedTicks_.size();
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
   */
  @Override
  public SkippedTicksInterval getSkippedTicks(int index) {
    return skippedTicks_.get(index);
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
   */
  @Override
  public SkippedTicksIntervalOrBuilder getSkippedTicksOrBuilder(
      int index) {
    return skippedTicks_.get(index);
  }

  public static final int PROCESSED_TICK_INTERVALS_PER_EPOCH_FIELD_NUMBER = 4;
  private java.util.List<ProcessedTickIntervalsPerEpoch> processedTickIntervalsPerEpoch_;
  /**
   * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
   */
  @Override
  public java.util.List<ProcessedTickIntervalsPerEpoch> getProcessedTickIntervalsPerEpochList() {
    return processedTickIntervalsPerEpoch_;
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
   */
  @Override
  public java.util.List<? extends ProcessedTickIntervalsPerEpochOrBuilder>
      getProcessedTickIntervalsPerEpochOrBuilderList() {
    return processedTickIntervalsPerEpoch_;
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
   */
  @Override
  public int getProcessedTickIntervalsPerEpochCount() {
    return processedTickIntervalsPerEpoch_.size();
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
   */
  @Override
  public ProcessedTickIntervalsPerEpoch getProcessedTickIntervalsPerEpoch(int index) {
    return processedTickIntervalsPerEpoch_.get(index);
  }
  /**
   * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
   */
  @Override
  public ProcessedTickIntervalsPerEpochOrBuilder getProcessedTickIntervalsPerEpochOrBuilder(
      int index) {
    return processedTickIntervalsPerEpoch_.get(index);
  }

  public static final int EMPTY_TICKS_PER_EPOCH_FIELD_NUMBER = 5;
  private static final class EmptyTicksPerEpochDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, Integer>newDefaultInstance(
                QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_EmptyTicksPerEpochEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0);
  }
  private com.google.protobuf.MapField<
      Integer, Integer> emptyTicksPerEpoch_;
  private com.google.protobuf.MapField<Integer, Integer>
  internalGetEmptyTicksPerEpoch() {
    if (emptyTicksPerEpoch_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          EmptyTicksPerEpochDefaultEntryHolder.defaultEntry);
    }
    return emptyTicksPerEpoch_;
  }

  public int getEmptyTicksPerEpochCount() {
    return internalGetEmptyTicksPerEpoch().getMap().size();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
   */

  @Override
  public boolean containsEmptyTicksPerEpoch(
      int key) {
    
    return internalGetEmptyTicksPerEpoch().getMap().containsKey(key);
  }
  /**
   * Use {@link #getEmptyTicksPerEpochMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, Integer> getEmptyTicksPerEpoch() {
    return getEmptyTicksPerEpochMap();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
   */
  @Override

  public java.util.Map<Integer, Integer> getEmptyTicksPerEpochMap() {
    return internalGetEmptyTicksPerEpoch().getMap();
  }
  /**
   * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
   */
  @Override

  public int getEmptyTicksPerEpochOrDefault(
      int key,
      int defaultValue) {
    
    java.util.Map<Integer, Integer> map =
        internalGetEmptyTicksPerEpoch().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
   */
  @Override

  public int getEmptyTicksPerEpochOrThrow(
      int key) {
    
    java.util.Map<Integer, Integer> map =
        internalGetEmptyTicksPerEpoch().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (lastProcessedTick_ != null) {
      output.writeMessage(1, getLastProcessedTick());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetLastProcessedTicksPerEpoch(),
        LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry,
        2);
    for (int i = 0; i < skippedTicks_.size(); i++) {
      output.writeMessage(3, skippedTicks_.get(i));
    }
    for (int i = 0; i < processedTickIntervalsPerEpoch_.size(); i++) {
      output.writeMessage(4, processedTickIntervalsPerEpoch_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetEmptyTicksPerEpoch(),
        EmptyTicksPerEpochDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (lastProcessedTick_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLastProcessedTick());
    }
    for (java.util.Map.Entry<Integer, Integer> entry
         : internalGetLastProcessedTicksPerEpoch().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, Integer>
      lastProcessedTicksPerEpoch__ = LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, lastProcessedTicksPerEpoch__);
    }
    for (int i = 0; i < skippedTicks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, skippedTicks_.get(i));
    }
    for (int i = 0; i < processedTickIntervalsPerEpoch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, processedTickIntervalsPerEpoch_.get(i));
    }
    for (java.util.Map.Entry<Integer, Integer> entry
         : internalGetEmptyTicksPerEpoch().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, Integer>
      emptyTicksPerEpoch__ = EmptyTicksPerEpochDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, emptyTicksPerEpoch__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GetStatusResponse)) {
      return super.equals(obj);
    }
    GetStatusResponse other = (GetStatusResponse) obj;

    if (hasLastProcessedTick() != other.hasLastProcessedTick()) return false;
    if (hasLastProcessedTick()) {
      if (!getLastProcessedTick()
          .equals(other.getLastProcessedTick())) return false;
    }
    if (!internalGetLastProcessedTicksPerEpoch().equals(
        other.internalGetLastProcessedTicksPerEpoch())) return false;
    if (!getSkippedTicksList()
        .equals(other.getSkippedTicksList())) return false;
    if (!getProcessedTickIntervalsPerEpochList()
        .equals(other.getProcessedTickIntervalsPerEpochList())) return false;
    if (!internalGetEmptyTicksPerEpoch().equals(
        other.internalGetEmptyTicksPerEpoch())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLastProcessedTick()) {
      hash = (37 * hash) + LAST_PROCESSED_TICK_FIELD_NUMBER;
      hash = (53 * hash) + getLastProcessedTick().hashCode();
    }
    if (!internalGetLastProcessedTicksPerEpoch().getMap().isEmpty()) {
      hash = (37 * hash) + LAST_PROCESSED_TICKS_PER_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLastProcessedTicksPerEpoch().hashCode();
    }
    if (getSkippedTicksCount() > 0) {
      hash = (37 * hash) + SKIPPED_TICKS_FIELD_NUMBER;
      hash = (53 * hash) + getSkippedTicksList().hashCode();
    }
    if (getProcessedTickIntervalsPerEpochCount() > 0) {
      hash = (37 * hash) + PROCESSED_TICK_INTERVALS_PER_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + getProcessedTickIntervalsPerEpochList().hashCode();
    }
    if (!internalGetEmptyTicksPerEpoch().getMap().isEmpty()) {
      hash = (37 * hash) + EMPTY_TICKS_PER_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + internalGetEmptyTicksPerEpoch().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GetStatusResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GetStatusResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GetStatusResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GetStatusResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GetStatusResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GetStatusResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GetStatusResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GetStatusResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GetStatusResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GetStatusResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GetStatusResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GetStatusResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GetStatusResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code qubic.archiver.archive.pb.GetStatusResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:qubic.archiver.archive.pb.GetStatusResponse)
      GetStatusResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLastProcessedTicksPerEpoch();
        case 5:
          return internalGetEmptyTicksPerEpoch();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableLastProcessedTicksPerEpoch();
        case 5:
          return internalGetMutableEmptyTicksPerEpoch();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetStatusResponse.class, Builder.class);
    }

    // Construct using org.qubic.archiver.proto.GetStatusResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSkippedTicksFieldBuilder();
        getProcessedTickIntervalsPerEpochFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (lastProcessedTickBuilder_ == null) {
        lastProcessedTick_ = null;
      } else {
        lastProcessedTick_ = null;
        lastProcessedTickBuilder_ = null;
      }
      internalGetMutableLastProcessedTicksPerEpoch().clear();
      if (skippedTicksBuilder_ == null) {
        skippedTicks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        skippedTicksBuilder_.clear();
      }
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        processedTickIntervalsPerEpoch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        processedTickIntervalsPerEpochBuilder_.clear();
      }
      internalGetMutableEmptyTicksPerEpoch().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_GetStatusResponse_descriptor;
    }

    @Override
    public GetStatusResponse getDefaultInstanceForType() {
      return GetStatusResponse.getDefaultInstance();
    }

    @Override
    public GetStatusResponse build() {
      GetStatusResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public GetStatusResponse buildPartial() {
      GetStatusResponse result = new GetStatusResponse(this);
      int from_bitField0_ = bitField0_;
      if (lastProcessedTickBuilder_ == null) {
        result.lastProcessedTick_ = lastProcessedTick_;
      } else {
        result.lastProcessedTick_ = lastProcessedTickBuilder_.build();
      }
      result.lastProcessedTicksPerEpoch_ = internalGetLastProcessedTicksPerEpoch();
      result.lastProcessedTicksPerEpoch_.makeImmutable();
      if (skippedTicksBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          skippedTicks_ = java.util.Collections.unmodifiableList(skippedTicks_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.skippedTicks_ = skippedTicks_;
      } else {
        result.skippedTicks_ = skippedTicksBuilder_.build();
      }
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          processedTickIntervalsPerEpoch_ = java.util.Collections.unmodifiableList(processedTickIntervalsPerEpoch_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.processedTickIntervalsPerEpoch_ = processedTickIntervalsPerEpoch_;
      } else {
        result.processedTickIntervalsPerEpoch_ = processedTickIntervalsPerEpochBuilder_.build();
      }
      result.emptyTicksPerEpoch_ = internalGetEmptyTicksPerEpoch();
      result.emptyTicksPerEpoch_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GetStatusResponse) {
        return mergeFrom((GetStatusResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GetStatusResponse other) {
      if (other == GetStatusResponse.getDefaultInstance()) return this;
      if (other.hasLastProcessedTick()) {
        mergeLastProcessedTick(other.getLastProcessedTick());
      }
      internalGetMutableLastProcessedTicksPerEpoch().mergeFrom(
          other.internalGetLastProcessedTicksPerEpoch());
      if (skippedTicksBuilder_ == null) {
        if (!other.skippedTicks_.isEmpty()) {
          if (skippedTicks_.isEmpty()) {
            skippedTicks_ = other.skippedTicks_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSkippedTicksIsMutable();
            skippedTicks_.addAll(other.skippedTicks_);
          }
          onChanged();
        }
      } else {
        if (!other.skippedTicks_.isEmpty()) {
          if (skippedTicksBuilder_.isEmpty()) {
            skippedTicksBuilder_.dispose();
            skippedTicksBuilder_ = null;
            skippedTicks_ = other.skippedTicks_;
            bitField0_ = (bitField0_ & ~0x00000002);
            skippedTicksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSkippedTicksFieldBuilder() : null;
          } else {
            skippedTicksBuilder_.addAllMessages(other.skippedTicks_);
          }
        }
      }
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        if (!other.processedTickIntervalsPerEpoch_.isEmpty()) {
          if (processedTickIntervalsPerEpoch_.isEmpty()) {
            processedTickIntervalsPerEpoch_ = other.processedTickIntervalsPerEpoch_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureProcessedTickIntervalsPerEpochIsMutable();
            processedTickIntervalsPerEpoch_.addAll(other.processedTickIntervalsPerEpoch_);
          }
          onChanged();
        }
      } else {
        if (!other.processedTickIntervalsPerEpoch_.isEmpty()) {
          if (processedTickIntervalsPerEpochBuilder_.isEmpty()) {
            processedTickIntervalsPerEpochBuilder_.dispose();
            processedTickIntervalsPerEpochBuilder_ = null;
            processedTickIntervalsPerEpoch_ = other.processedTickIntervalsPerEpoch_;
            bitField0_ = (bitField0_ & ~0x00000004);
            processedTickIntervalsPerEpochBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getProcessedTickIntervalsPerEpochFieldBuilder() : null;
          } else {
            processedTickIntervalsPerEpochBuilder_.addAllMessages(other.processedTickIntervalsPerEpoch_);
          }
        }
      }
      internalGetMutableEmptyTicksPerEpoch().mergeFrom(
          other.internalGetEmptyTicksPerEpoch());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      GetStatusResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (GetStatusResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private ProcessedTick lastProcessedTick_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ProcessedTick, ProcessedTick.Builder, ProcessedTickOrBuilder> lastProcessedTickBuilder_;
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     * @return Whether the lastProcessedTick field is set.
     */
    public boolean hasLastProcessedTick() {
      return lastProcessedTickBuilder_ != null || lastProcessedTick_ != null;
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     * @return The lastProcessedTick.
     */
    public ProcessedTick getLastProcessedTick() {
      if (lastProcessedTickBuilder_ == null) {
        return lastProcessedTick_ == null ? ProcessedTick.getDefaultInstance() : lastProcessedTick_;
      } else {
        return lastProcessedTickBuilder_.getMessage();
      }
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public Builder setLastProcessedTick(ProcessedTick value) {
      if (lastProcessedTickBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lastProcessedTick_ = value;
        onChanged();
      } else {
        lastProcessedTickBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public Builder setLastProcessedTick(
        ProcessedTick.Builder builderForValue) {
      if (lastProcessedTickBuilder_ == null) {
        lastProcessedTick_ = builderForValue.build();
        onChanged();
      } else {
        lastProcessedTickBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public Builder mergeLastProcessedTick(ProcessedTick value) {
      if (lastProcessedTickBuilder_ == null) {
        if (lastProcessedTick_ != null) {
          lastProcessedTick_ =
            ProcessedTick.newBuilder(lastProcessedTick_).mergeFrom(value).buildPartial();
        } else {
          lastProcessedTick_ = value;
        }
        onChanged();
      } else {
        lastProcessedTickBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public Builder clearLastProcessedTick() {
      if (lastProcessedTickBuilder_ == null) {
        lastProcessedTick_ = null;
        onChanged();
      } else {
        lastProcessedTick_ = null;
        lastProcessedTickBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public ProcessedTick.Builder getLastProcessedTickBuilder() {
      
      onChanged();
      return getLastProcessedTickFieldBuilder().getBuilder();
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    public ProcessedTickOrBuilder getLastProcessedTickOrBuilder() {
      if (lastProcessedTickBuilder_ != null) {
        return lastProcessedTickBuilder_.getMessageOrBuilder();
      } else {
        return lastProcessedTick_ == null ?
            ProcessedTick.getDefaultInstance() : lastProcessedTick_;
      }
    }
    /**
     * <code>.qubic.archiver.archive.pb.ProcessedTick last_processed_tick = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ProcessedTick, ProcessedTick.Builder, ProcessedTickOrBuilder>
        getLastProcessedTickFieldBuilder() {
      if (lastProcessedTickBuilder_ == null) {
        lastProcessedTickBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ProcessedTick, ProcessedTick.Builder, ProcessedTickOrBuilder>(
                getLastProcessedTick(),
                getParentForChildren(),
                isClean());
        lastProcessedTick_ = null;
      }
      return lastProcessedTickBuilder_;
    }

    private com.google.protobuf.MapField<
        Integer, Integer> lastProcessedTicksPerEpoch_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetLastProcessedTicksPerEpoch() {
      if (lastProcessedTicksPerEpoch_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry);
      }
      return lastProcessedTicksPerEpoch_;
    }
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetMutableLastProcessedTicksPerEpoch() {
      onChanged();;
      if (lastProcessedTicksPerEpoch_ == null) {
        lastProcessedTicksPerEpoch_ = com.google.protobuf.MapField.newMapField(
            LastProcessedTicksPerEpochDefaultEntryHolder.defaultEntry);
      }
      if (!lastProcessedTicksPerEpoch_.isMutable()) {
        lastProcessedTicksPerEpoch_ = lastProcessedTicksPerEpoch_.copy();
      }
      return lastProcessedTicksPerEpoch_;
    }

    public int getLastProcessedTicksPerEpochCount() {
      return internalGetLastProcessedTicksPerEpoch().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */

    @Override
    public boolean containsLastProcessedTicksPerEpoch(
        int key) {
      
      return internalGetLastProcessedTicksPerEpoch().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLastProcessedTicksPerEpochMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getLastProcessedTicksPerEpoch() {
      return getLastProcessedTicksPerEpochMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */
    @Override

    public java.util.Map<Integer, Integer> getLastProcessedTicksPerEpochMap() {
      return internalGetLastProcessedTicksPerEpoch().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */
    @Override

    public int getLastProcessedTicksPerEpochOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<Integer, Integer> map =
          internalGetLastProcessedTicksPerEpoch().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */
    @Override

    public int getLastProcessedTicksPerEpochOrThrow(
        int key) {
      
      java.util.Map<Integer, Integer> map =
          internalGetLastProcessedTicksPerEpoch().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLastProcessedTicksPerEpoch() {
      internalGetMutableLastProcessedTicksPerEpoch().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */

    public Builder removeLastProcessedTicksPerEpoch(
        int key) {
      
      internalGetMutableLastProcessedTicksPerEpoch().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer>
    getMutableLastProcessedTicksPerEpoch() {
      return internalGetMutableLastProcessedTicksPerEpoch().getMutableMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */
    public Builder putLastProcessedTicksPerEpoch(
        int key,
        int value) {
      
      
      internalGetMutableLastProcessedTicksPerEpoch().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; last_processed_ticks_per_epoch = 2;</code>
     */

    public Builder putAllLastProcessedTicksPerEpoch(
        java.util.Map<Integer, Integer> values) {
      internalGetMutableLastProcessedTicksPerEpoch().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<SkippedTicksInterval> skippedTicks_ =
      java.util.Collections.emptyList();
    private void ensureSkippedTicksIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        skippedTicks_ = new java.util.ArrayList<SkippedTicksInterval>(skippedTicks_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        SkippedTicksInterval, SkippedTicksInterval.Builder, SkippedTicksIntervalOrBuilder> skippedTicksBuilder_;

    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public java.util.List<SkippedTicksInterval> getSkippedTicksList() {
      if (skippedTicksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(skippedTicks_);
      } else {
        return skippedTicksBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public int getSkippedTicksCount() {
      if (skippedTicksBuilder_ == null) {
        return skippedTicks_.size();
      } else {
        return skippedTicksBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public SkippedTicksInterval getSkippedTicks(int index) {
      if (skippedTicksBuilder_ == null) {
        return skippedTicks_.get(index);
      } else {
        return skippedTicksBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder setSkippedTicks(
        int index, SkippedTicksInterval value) {
      if (skippedTicksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTicksIsMutable();
        skippedTicks_.set(index, value);
        onChanged();
      } else {
        skippedTicksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder setSkippedTicks(
        int index, SkippedTicksInterval.Builder builderForValue) {
      if (skippedTicksBuilder_ == null) {
        ensureSkippedTicksIsMutable();
        skippedTicks_.set(index, builderForValue.build());
        onChanged();
      } else {
        skippedTicksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder addSkippedTicks(SkippedTicksInterval value) {
      if (skippedTicksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTicksIsMutable();
        skippedTicks_.add(value);
        onChanged();
      } else {
        skippedTicksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder addSkippedTicks(
        int index, SkippedTicksInterval value) {
      if (skippedTicksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTicksIsMutable();
        skippedTicks_.add(index, value);
        onChanged();
      } else {
        skippedTicksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder addSkippedTicks(
        SkippedTicksInterval.Builder builderForValue) {
      if (skippedTicksBuilder_ == null) {
        ensureSkippedTicksIsMutable();
        skippedTicks_.add(builderForValue.build());
        onChanged();
      } else {
        skippedTicksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder addSkippedTicks(
        int index, SkippedTicksInterval.Builder builderForValue) {
      if (skippedTicksBuilder_ == null) {
        ensureSkippedTicksIsMutable();
        skippedTicks_.add(index, builderForValue.build());
        onChanged();
      } else {
        skippedTicksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder addAllSkippedTicks(
        Iterable<? extends SkippedTicksInterval> values) {
      if (skippedTicksBuilder_ == null) {
        ensureSkippedTicksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, skippedTicks_);
        onChanged();
      } else {
        skippedTicksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder clearSkippedTicks() {
      if (skippedTicksBuilder_ == null) {
        skippedTicks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        skippedTicksBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public Builder removeSkippedTicks(int index) {
      if (skippedTicksBuilder_ == null) {
        ensureSkippedTicksIsMutable();
        skippedTicks_.remove(index);
        onChanged();
      } else {
        skippedTicksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public SkippedTicksInterval.Builder getSkippedTicksBuilder(
        int index) {
      return getSkippedTicksFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public SkippedTicksIntervalOrBuilder getSkippedTicksOrBuilder(
        int index) {
      if (skippedTicksBuilder_ == null) {
        return skippedTicks_.get(index);  } else {
        return skippedTicksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public java.util.List<? extends SkippedTicksIntervalOrBuilder>
         getSkippedTicksOrBuilderList() {
      if (skippedTicksBuilder_ != null) {
        return skippedTicksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(skippedTicks_);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public SkippedTicksInterval.Builder addSkippedTicksBuilder() {
      return getSkippedTicksFieldBuilder().addBuilder(
          SkippedTicksInterval.getDefaultInstance());
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public SkippedTicksInterval.Builder addSkippedTicksBuilder(
        int index) {
      return getSkippedTicksFieldBuilder().addBuilder(
          index, SkippedTicksInterval.getDefaultInstance());
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.SkippedTicksInterval skipped_ticks = 3;</code>
     */
    public java.util.List<SkippedTicksInterval.Builder>
         getSkippedTicksBuilderList() {
      return getSkippedTicksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        SkippedTicksInterval, SkippedTicksInterval.Builder, SkippedTicksIntervalOrBuilder>
        getSkippedTicksFieldBuilder() {
      if (skippedTicksBuilder_ == null) {
        skippedTicksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            SkippedTicksInterval, SkippedTicksInterval.Builder, SkippedTicksIntervalOrBuilder>(
                skippedTicks_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        skippedTicks_ = null;
      }
      return skippedTicksBuilder_;
    }

    private java.util.List<ProcessedTickIntervalsPerEpoch> processedTickIntervalsPerEpoch_ =
      java.util.Collections.emptyList();
    private void ensureProcessedTickIntervalsPerEpochIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        processedTickIntervalsPerEpoch_ = new java.util.ArrayList<ProcessedTickIntervalsPerEpoch>(processedTickIntervalsPerEpoch_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ProcessedTickIntervalsPerEpoch, ProcessedTickIntervalsPerEpoch.Builder, ProcessedTickIntervalsPerEpochOrBuilder> processedTickIntervalsPerEpochBuilder_;

    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public java.util.List<ProcessedTickIntervalsPerEpoch> getProcessedTickIntervalsPerEpochList() {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        return java.util.Collections.unmodifiableList(processedTickIntervalsPerEpoch_);
      } else {
        return processedTickIntervalsPerEpochBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public int getProcessedTickIntervalsPerEpochCount() {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        return processedTickIntervalsPerEpoch_.size();
      } else {
        return processedTickIntervalsPerEpochBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public ProcessedTickIntervalsPerEpoch getProcessedTickIntervalsPerEpoch(int index) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        return processedTickIntervalsPerEpoch_.get(index);
      } else {
        return processedTickIntervalsPerEpochBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder setProcessedTickIntervalsPerEpoch(
        int index, ProcessedTickIntervalsPerEpoch value) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.set(index, value);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder setProcessedTickIntervalsPerEpoch(
        int index, ProcessedTickIntervalsPerEpoch.Builder builderForValue) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.set(index, builderForValue.build());
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder addProcessedTickIntervalsPerEpoch(ProcessedTickIntervalsPerEpoch value) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.add(value);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder addProcessedTickIntervalsPerEpoch(
        int index, ProcessedTickIntervalsPerEpoch value) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.add(index, value);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder addProcessedTickIntervalsPerEpoch(
        ProcessedTickIntervalsPerEpoch.Builder builderForValue) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.add(builderForValue.build());
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder addProcessedTickIntervalsPerEpoch(
        int index, ProcessedTickIntervalsPerEpoch.Builder builderForValue) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.add(index, builderForValue.build());
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder addAllProcessedTickIntervalsPerEpoch(
        Iterable<? extends ProcessedTickIntervalsPerEpoch> values) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        ensureProcessedTickIntervalsPerEpochIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, processedTickIntervalsPerEpoch_);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder clearProcessedTickIntervalsPerEpoch() {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        processedTickIntervalsPerEpoch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public Builder removeProcessedTickIntervalsPerEpoch(int index) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        ensureProcessedTickIntervalsPerEpochIsMutable();
        processedTickIntervalsPerEpoch_.remove(index);
        onChanged();
      } else {
        processedTickIntervalsPerEpochBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public ProcessedTickIntervalsPerEpoch.Builder getProcessedTickIntervalsPerEpochBuilder(
        int index) {
      return getProcessedTickIntervalsPerEpochFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public ProcessedTickIntervalsPerEpochOrBuilder getProcessedTickIntervalsPerEpochOrBuilder(
        int index) {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        return processedTickIntervalsPerEpoch_.get(index);  } else {
        return processedTickIntervalsPerEpochBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public java.util.List<? extends ProcessedTickIntervalsPerEpochOrBuilder>
         getProcessedTickIntervalsPerEpochOrBuilderList() {
      if (processedTickIntervalsPerEpochBuilder_ != null) {
        return processedTickIntervalsPerEpochBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(processedTickIntervalsPerEpoch_);
      }
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public ProcessedTickIntervalsPerEpoch.Builder addProcessedTickIntervalsPerEpochBuilder() {
      return getProcessedTickIntervalsPerEpochFieldBuilder().addBuilder(
          ProcessedTickIntervalsPerEpoch.getDefaultInstance());
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public ProcessedTickIntervalsPerEpoch.Builder addProcessedTickIntervalsPerEpochBuilder(
        int index) {
      return getProcessedTickIntervalsPerEpochFieldBuilder().addBuilder(
          index, ProcessedTickIntervalsPerEpoch.getDefaultInstance());
    }
    /**
     * <code>repeated .qubic.archiver.archive.pb.ProcessedTickIntervalsPerEpoch processed_tick_intervals_per_epoch = 4;</code>
     */
    public java.util.List<ProcessedTickIntervalsPerEpoch.Builder>
         getProcessedTickIntervalsPerEpochBuilderList() {
      return getProcessedTickIntervalsPerEpochFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ProcessedTickIntervalsPerEpoch, ProcessedTickIntervalsPerEpoch.Builder, ProcessedTickIntervalsPerEpochOrBuilder>
        getProcessedTickIntervalsPerEpochFieldBuilder() {
      if (processedTickIntervalsPerEpochBuilder_ == null) {
        processedTickIntervalsPerEpochBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ProcessedTickIntervalsPerEpoch, ProcessedTickIntervalsPerEpoch.Builder, ProcessedTickIntervalsPerEpochOrBuilder>(
                processedTickIntervalsPerEpoch_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        processedTickIntervalsPerEpoch_ = null;
      }
      return processedTickIntervalsPerEpochBuilder_;
    }

    private com.google.protobuf.MapField<
        Integer, Integer> emptyTicksPerEpoch_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetEmptyTicksPerEpoch() {
      if (emptyTicksPerEpoch_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EmptyTicksPerEpochDefaultEntryHolder.defaultEntry);
      }
      return emptyTicksPerEpoch_;
    }
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetMutableEmptyTicksPerEpoch() {
      onChanged();;
      if (emptyTicksPerEpoch_ == null) {
        emptyTicksPerEpoch_ = com.google.protobuf.MapField.newMapField(
            EmptyTicksPerEpochDefaultEntryHolder.defaultEntry);
      }
      if (!emptyTicksPerEpoch_.isMutable()) {
        emptyTicksPerEpoch_ = emptyTicksPerEpoch_.copy();
      }
      return emptyTicksPerEpoch_;
    }

    public int getEmptyTicksPerEpochCount() {
      return internalGetEmptyTicksPerEpoch().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */

    @Override
    public boolean containsEmptyTicksPerEpoch(
        int key) {
      
      return internalGetEmptyTicksPerEpoch().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEmptyTicksPerEpochMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getEmptyTicksPerEpoch() {
      return getEmptyTicksPerEpochMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */
    @Override

    public java.util.Map<Integer, Integer> getEmptyTicksPerEpochMap() {
      return internalGetEmptyTicksPerEpoch().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */
    @Override

    public int getEmptyTicksPerEpochOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<Integer, Integer> map =
          internalGetEmptyTicksPerEpoch().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */
    @Override

    public int getEmptyTicksPerEpochOrThrow(
        int key) {
      
      java.util.Map<Integer, Integer> map =
          internalGetEmptyTicksPerEpoch().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearEmptyTicksPerEpoch() {
      internalGetMutableEmptyTicksPerEpoch().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */

    public Builder removeEmptyTicksPerEpoch(
        int key) {
      
      internalGetMutableEmptyTicksPerEpoch().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer>
    getMutableEmptyTicksPerEpoch() {
      return internalGetMutableEmptyTicksPerEpoch().getMutableMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */
    public Builder putEmptyTicksPerEpoch(
        int key,
        int value) {
      
      
      internalGetMutableEmptyTicksPerEpoch().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; empty_ticks_per_epoch = 5;</code>
     */

    public Builder putAllEmptyTicksPerEpoch(
        java.util.Map<Integer, Integer> values) {
      internalGetMutableEmptyTicksPerEpoch().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:qubic.archiver.archive.pb.GetStatusResponse)
  }

  // @@protoc_insertion_point(class_scope:qubic.archiver.archive.pb.GetStatusResponse)
  private static final GetStatusResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GetStatusResponse();
  }

  public static GetStatusResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetStatusResponse>
      PARSER = new com.google.protobuf.AbstractParser<GetStatusResponse>() {
    @Override
    public GetStatusResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GetStatusResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GetStatusResponse> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GetStatusResponse> getParserForType() {
    return PARSER;
  }

  @Override
  public GetStatusResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

