// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: archive.proto

package org.qubic.archiver.proto;

/**
 * Protobuf type {@code qubic.archiver.archive.pb.QuorumTickDataStored}
 */
public final class QuorumTickDataStored extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:qubic.archiver.archive.pb.QuorumTickDataStored)
    QuorumTickDataStoredOrBuilder {
private static final long serialVersionUID = 0L;
  // Use QuorumTickDataStored.newBuilder() to construct.
  private QuorumTickDataStored(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QuorumTickDataStored() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new QuorumTickDataStored();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private QuorumTickDataStored(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            QuorumTickStructure.Builder subBuilder = null;
            if (quorumTickStructure_ != null) {
              subBuilder = quorumTickStructure_.toBuilder();
            }
            quorumTickStructure_ = input.readMessage(QuorumTickStructure.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quorumTickStructure_);
              quorumTickStructure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              quorumDiffPerComputor_ = com.google.protobuf.MapField.newMapField(
                  QuorumDiffPerComputorDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<Integer, QuorumDiffStored>
            quorumDiffPerComputor__ = input.readMessage(
                QuorumDiffPerComputorDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            quorumDiffPerComputor_.getMutableMap().put(
                quorumDiffPerComputor__.getKey(), quorumDiffPerComputor__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetQuorumDiffPerComputor();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            QuorumTickDataStored.class, Builder.class);
  }

  public static final int QUORUM_TICK_STRUCTURE_FIELD_NUMBER = 1;
  private QuorumTickStructure quorumTickStructure_;
  /**
   * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
   * @return Whether the quorumTickStructure field is set.
   */
  @Override
  public boolean hasQuorumTickStructure() {
    return quorumTickStructure_ != null;
  }
  /**
   * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
   * @return The quorumTickStructure.
   */
  @Override
  public QuorumTickStructure getQuorumTickStructure() {
    return quorumTickStructure_ == null ? QuorumTickStructure.getDefaultInstance() : quorumTickStructure_;
  }
  /**
   * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
   */
  @Override
  public QuorumTickStructureOrBuilder getQuorumTickStructureOrBuilder() {
    return getQuorumTickStructure();
  }

  public static final int QUORUM_DIFF_PER_COMPUTOR_FIELD_NUMBER = 2;
  private static final class QuorumDiffPerComputorDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        Integer, QuorumDiffStored> defaultEntry =
            com.google.protobuf.MapEntry
            .<Integer, QuorumDiffStored>newDefaultInstance(
                QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_QuorumDiffPerComputorEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                QuorumDiffStored.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      Integer, QuorumDiffStored> quorumDiffPerComputor_;
  private com.google.protobuf.MapField<Integer, QuorumDiffStored>
  internalGetQuorumDiffPerComputor() {
    if (quorumDiffPerComputor_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          QuorumDiffPerComputorDefaultEntryHolder.defaultEntry);
    }
    return quorumDiffPerComputor_;
  }

  public int getQuorumDiffPerComputorCount() {
    return internalGetQuorumDiffPerComputor().getMap().size();
  }
  /**
   * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
   */

  @Override
  public boolean containsQuorumDiffPerComputor(
      int key) {
    
    return internalGetQuorumDiffPerComputor().getMap().containsKey(key);
  }
  /**
   * Use {@link #getQuorumDiffPerComputorMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<Integer, QuorumDiffStored> getQuorumDiffPerComputor() {
    return getQuorumDiffPerComputorMap();
  }
  /**
   * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
   */
  @Override

  public java.util.Map<Integer, QuorumDiffStored> getQuorumDiffPerComputorMap() {
    return internalGetQuorumDiffPerComputor().getMap();
  }
  /**
   * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
   */
  @Override

  public QuorumDiffStored getQuorumDiffPerComputorOrDefault(
      int key,
      QuorumDiffStored defaultValue) {
    
    java.util.Map<Integer, QuorumDiffStored> map =
        internalGetQuorumDiffPerComputor().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
   */
  @Override

  public QuorumDiffStored getQuorumDiffPerComputorOrThrow(
      int key) {
    
    java.util.Map<Integer, QuorumDiffStored> map =
        internalGetQuorumDiffPerComputor().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (quorumTickStructure_ != null) {
      output.writeMessage(1, getQuorumTickStructure());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetQuorumDiffPerComputor(),
        QuorumDiffPerComputorDefaultEntryHolder.defaultEntry,
        2);
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (quorumTickStructure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getQuorumTickStructure());
    }
    for (java.util.Map.Entry<Integer, QuorumDiffStored> entry
         : internalGetQuorumDiffPerComputor().getMap().entrySet()) {
      com.google.protobuf.MapEntry<Integer, QuorumDiffStored>
      quorumDiffPerComputor__ = QuorumDiffPerComputorDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, quorumDiffPerComputor__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof QuorumTickDataStored)) {
      return super.equals(obj);
    }
    QuorumTickDataStored other = (QuorumTickDataStored) obj;

    if (hasQuorumTickStructure() != other.hasQuorumTickStructure()) return false;
    if (hasQuorumTickStructure()) {
      if (!getQuorumTickStructure()
          .equals(other.getQuorumTickStructure())) return false;
    }
    if (!internalGetQuorumDiffPerComputor().equals(
        other.internalGetQuorumDiffPerComputor())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasQuorumTickStructure()) {
      hash = (37 * hash) + QUORUM_TICK_STRUCTURE_FIELD_NUMBER;
      hash = (53 * hash) + getQuorumTickStructure().hashCode();
    }
    if (!internalGetQuorumDiffPerComputor().getMap().isEmpty()) {
      hash = (37 * hash) + QUORUM_DIFF_PER_COMPUTOR_FIELD_NUMBER;
      hash = (53 * hash) + internalGetQuorumDiffPerComputor().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static QuorumTickDataStored parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static QuorumTickDataStored parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static QuorumTickDataStored parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static QuorumTickDataStored parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static QuorumTickDataStored parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static QuorumTickDataStored parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static QuorumTickDataStored parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static QuorumTickDataStored parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static QuorumTickDataStored parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static QuorumTickDataStored parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static QuorumTickDataStored parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static QuorumTickDataStored parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(QuorumTickDataStored prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code qubic.archiver.archive.pb.QuorumTickDataStored}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:qubic.archiver.archive.pb.QuorumTickDataStored)
      QuorumTickDataStoredOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetQuorumDiffPerComputor();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableQuorumDiffPerComputor();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              QuorumTickDataStored.class, Builder.class);
    }

    // Construct using org.qubic.archiver.proto.QuorumTickDataStored.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (quorumTickStructureBuilder_ == null) {
        quorumTickStructure_ = null;
      } else {
        quorumTickStructure_ = null;
        quorumTickStructureBuilder_ = null;
      }
      internalGetMutableQuorumDiffPerComputor().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return QubicArchiverProtos.internal_static_qubic_archiver_archive_pb_QuorumTickDataStored_descriptor;
    }

    @Override
    public QuorumTickDataStored getDefaultInstanceForType() {
      return QuorumTickDataStored.getDefaultInstance();
    }

    @Override
    public QuorumTickDataStored build() {
      QuorumTickDataStored result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public QuorumTickDataStored buildPartial() {
      QuorumTickDataStored result = new QuorumTickDataStored(this);
      int from_bitField0_ = bitField0_;
      if (quorumTickStructureBuilder_ == null) {
        result.quorumTickStructure_ = quorumTickStructure_;
      } else {
        result.quorumTickStructure_ = quorumTickStructureBuilder_.build();
      }
      result.quorumDiffPerComputor_ = internalGetQuorumDiffPerComputor();
      result.quorumDiffPerComputor_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof QuorumTickDataStored) {
        return mergeFrom((QuorumTickDataStored)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(QuorumTickDataStored other) {
      if (other == QuorumTickDataStored.getDefaultInstance()) return this;
      if (other.hasQuorumTickStructure()) {
        mergeQuorumTickStructure(other.getQuorumTickStructure());
      }
      internalGetMutableQuorumDiffPerComputor().mergeFrom(
          other.internalGetQuorumDiffPerComputor());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      QuorumTickDataStored parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (QuorumTickDataStored) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private QuorumTickStructure quorumTickStructure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        QuorumTickStructure, QuorumTickStructure.Builder, QuorumTickStructureOrBuilder> quorumTickStructureBuilder_;
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     * @return Whether the quorumTickStructure field is set.
     */
    public boolean hasQuorumTickStructure() {
      return quorumTickStructureBuilder_ != null || quorumTickStructure_ != null;
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     * @return The quorumTickStructure.
     */
    public QuorumTickStructure getQuorumTickStructure() {
      if (quorumTickStructureBuilder_ == null) {
        return quorumTickStructure_ == null ? QuorumTickStructure.getDefaultInstance() : quorumTickStructure_;
      } else {
        return quorumTickStructureBuilder_.getMessage();
      }
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public Builder setQuorumTickStructure(QuorumTickStructure value) {
      if (quorumTickStructureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quorumTickStructure_ = value;
        onChanged();
      } else {
        quorumTickStructureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public Builder setQuorumTickStructure(
        QuorumTickStructure.Builder builderForValue) {
      if (quorumTickStructureBuilder_ == null) {
        quorumTickStructure_ = builderForValue.build();
        onChanged();
      } else {
        quorumTickStructureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public Builder mergeQuorumTickStructure(QuorumTickStructure value) {
      if (quorumTickStructureBuilder_ == null) {
        if (quorumTickStructure_ != null) {
          quorumTickStructure_ =
            QuorumTickStructure.newBuilder(quorumTickStructure_).mergeFrom(value).buildPartial();
        } else {
          quorumTickStructure_ = value;
        }
        onChanged();
      } else {
        quorumTickStructureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public Builder clearQuorumTickStructure() {
      if (quorumTickStructureBuilder_ == null) {
        quorumTickStructure_ = null;
        onChanged();
      } else {
        quorumTickStructure_ = null;
        quorumTickStructureBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public QuorumTickStructure.Builder getQuorumTickStructureBuilder() {
      
      onChanged();
      return getQuorumTickStructureFieldBuilder().getBuilder();
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    public QuorumTickStructureOrBuilder getQuorumTickStructureOrBuilder() {
      if (quorumTickStructureBuilder_ != null) {
        return quorumTickStructureBuilder_.getMessageOrBuilder();
      } else {
        return quorumTickStructure_ == null ?
            QuorumTickStructure.getDefaultInstance() : quorumTickStructure_;
      }
    }
    /**
     * <code>.qubic.archiver.archive.pb.QuorumTickStructure quorum_tick_structure = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        QuorumTickStructure, QuorumTickStructure.Builder, QuorumTickStructureOrBuilder>
        getQuorumTickStructureFieldBuilder() {
      if (quorumTickStructureBuilder_ == null) {
        quorumTickStructureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            QuorumTickStructure, QuorumTickStructure.Builder, QuorumTickStructureOrBuilder>(
                getQuorumTickStructure(),
                getParentForChildren(),
                isClean());
        quorumTickStructure_ = null;
      }
      return quorumTickStructureBuilder_;
    }

    private com.google.protobuf.MapField<
        Integer, QuorumDiffStored> quorumDiffPerComputor_;
    private com.google.protobuf.MapField<Integer, QuorumDiffStored>
    internalGetQuorumDiffPerComputor() {
      if (quorumDiffPerComputor_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            QuorumDiffPerComputorDefaultEntryHolder.defaultEntry);
      }
      return quorumDiffPerComputor_;
    }
    private com.google.protobuf.MapField<Integer, QuorumDiffStored>
    internalGetMutableQuorumDiffPerComputor() {
      onChanged();;
      if (quorumDiffPerComputor_ == null) {
        quorumDiffPerComputor_ = com.google.protobuf.MapField.newMapField(
            QuorumDiffPerComputorDefaultEntryHolder.defaultEntry);
      }
      if (!quorumDiffPerComputor_.isMutable()) {
        quorumDiffPerComputor_ = quorumDiffPerComputor_.copy();
      }
      return quorumDiffPerComputor_;
    }

    public int getQuorumDiffPerComputorCount() {
      return internalGetQuorumDiffPerComputor().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */

    @Override
    public boolean containsQuorumDiffPerComputor(
        int key) {
      
      return internalGetQuorumDiffPerComputor().getMap().containsKey(key);
    }
    /**
     * Use {@link #getQuorumDiffPerComputorMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, QuorumDiffStored> getQuorumDiffPerComputor() {
      return getQuorumDiffPerComputorMap();
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */
    @Override

    public java.util.Map<Integer, QuorumDiffStored> getQuorumDiffPerComputorMap() {
      return internalGetQuorumDiffPerComputor().getMap();
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */
    @Override

    public QuorumDiffStored getQuorumDiffPerComputorOrDefault(
        int key,
        QuorumDiffStored defaultValue) {
      
      java.util.Map<Integer, QuorumDiffStored> map =
          internalGetQuorumDiffPerComputor().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */
    @Override

    public QuorumDiffStored getQuorumDiffPerComputorOrThrow(
        int key) {
      
      java.util.Map<Integer, QuorumDiffStored> map =
          internalGetQuorumDiffPerComputor().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearQuorumDiffPerComputor() {
      internalGetMutableQuorumDiffPerComputor().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */

    public Builder removeQuorumDiffPerComputor(
        int key) {
      
      internalGetMutableQuorumDiffPerComputor().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<Integer, QuorumDiffStored>
    getMutableQuorumDiffPerComputor() {
      return internalGetMutableQuorumDiffPerComputor().getMutableMap();
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */
    public Builder putQuorumDiffPerComputor(
        int key,
        QuorumDiffStored value) {
      
      if (value == null) { throw new NullPointerException(); }
      internalGetMutableQuorumDiffPerComputor().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, .qubic.archiver.archive.pb.QuorumDiffStored&gt; quorum_diff_per_computor = 2;</code>
     */

    public Builder putAllQuorumDiffPerComputor(
        java.util.Map<Integer, QuorumDiffStored> values) {
      internalGetMutableQuorumDiffPerComputor().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:qubic.archiver.archive.pb.QuorumTickDataStored)
  }

  // @@protoc_insertion_point(class_scope:qubic.archiver.archive.pb.QuorumTickDataStored)
  private static final QuorumTickDataStored DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new QuorumTickDataStored();
  }

  public static QuorumTickDataStored getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QuorumTickDataStored>
      PARSER = new com.google.protobuf.AbstractParser<QuorumTickDataStored>() {
    @Override
    public QuorumTickDataStored parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new QuorumTickDataStored(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<QuorumTickDataStored> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<QuorumTickDataStored> getParserForType() {
    return PARSER;
  }

  @Override
  public QuorumTickDataStored getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

